{"version":3,"file":"vanilla-click-outside.js","sources":["../src/index.ts","../src/utils.ts"],"sourcesContent":["import { isNodeList, isHTMLCollection, isHTMLElement } from './utils'\n\nexport type VanillaClickOutsideSelector =\n  | HTMLElement\n  | HTMLCollection\n  | NodeList\nexport type VanillaClickOutsideOptions = {\n  removeListener: boolean\n}\nexport type VanillaClickOutsideCallback = (state: boolean | null) => {}\n\nconst defaultOptions: VanillaClickOutsideOptions = {\n  removeListener: true,\n}\n\nexport default function vanillaClickOutside(\n  selector: VanillaClickOutsideSelector,\n  callback: VanillaClickOutsideCallback,\n  options?: VanillaClickOutsideOptions\n): EventListener {\n  const theOptions = { ...defaultOptions, ...options }\n\n  const listener = (event: Event) => {\n    if (isNodeList(selector) || isHTMLCollection(selector)) {\n      if (\n        Array.from(<HTMLCollection | NodeList>selector).some((selection) =>\n          selection.contains(<Node>event.target)\n        )\n      ) {\n        return callback(false)\n      }\n    } else if (isHTMLElement(selector)) {\n      if ((selector as HTMLElement).contains(<Node>event.target)) {\n        return callback(false)\n      }\n    } else {\n      console.warn('Undefined type of', selector)\n      return callback(null)\n    }\n\n    if (theOptions.removeListener) {\n      document.removeEventListener('click', listener)\n    }\n\n    return callback(true)\n  }\n\n  document.addEventListener('click', listener)\n\n  return listener\n}\n","export function isNodeList(target: any): boolean {\n  return NodeList.prototype.isPrototypeOf(target)\n}\n\nexport function isHTMLCollection(target: any): boolean {\n  return HTMLCollection.prototype.isPrototypeOf(target)\n}\n\nexport function isHTMLElement(target: any): boolean {\n  return HTMLElement.prototype.isPrototypeOf(target)\n}\n\nexport function isElement(target: any): boolean {\n  return Element.prototype.isPrototypeOf(target)\n}\n"],"names":["const","defaultOptions","removeListener","selector","callback","options","theOptions","Object","listener","event","NodeList","prototype","isPrototypeOf","HTMLCollection","Array","from","some","selection","contains","target","HTMLElement","console","warn","document","removeEventListener","addEventListener"],"mappings":"AAWAA,IAAMC,EAA6C,CACjDC,gBAAgB,kBAGlB,SACEC,EACAC,EACAC,OAEMC,EAAaC,iBAAKN,KAElBO,WAAYC,MCrBXC,SAASC,UAAUC,cDsBTT,IClBVU,eAAeF,UAAUC,cDkBeT,OAEzCW,MAAMC,KAAgCZ,GAAUa,cAAMC,UACpDA,EAAUC,SAAeT,EAAMU,iBAG1Bf,GAAS,OAEb,CAAA,ICtBFgB,YAAYT,UAAUC,cDsBFT,UAKvBkB,QAAQC,KAAK,oBAAqBnB,GAC3BC,EAAS,SALXD,EAAyBe,SAAeT,EAAMU,eAC1Cf,GAAS,UAOhBE,EAAWJ,gBACbqB,SAASC,oBAAoB,QAAShB,GAGjCJ,GAAS,WAGlBmB,SAASE,iBAAiB,QAASjB,GAE5BA"}